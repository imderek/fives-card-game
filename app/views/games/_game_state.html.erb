<% board_state = GameBoardSerializer.new(game).as_json %>

<div id="game-state" class="w-full flex flex-col items-center gap-2">
  <!-- top row (player hand and discard button) -->
  <div class="px-2 w-full flex flex-col items-center justify-center gap-2 relative z-40">
    <% can_discard = game.winner_id.nil? && 
                      game.current_turn == current_user.id && 
                      game.turn_phase == "play_card" && 
                      ((current_user.id == game.player1_id && game.player1_discard_pile&.empty?) || 
                      (current_user.id == game.player2_id && game.player2_discard_pile&.empty?)) %>
    <!-- player hand -->
    <div class="player-hand <%= can_discard || game.winner_id.present? ? 'mb-1' : 'mb-6' %> relative top-[1.8rem] flex items-end justify-center space-x-[-1.5rem]">
      <% player_hand = current_user.id == game.player1_id ? game.player1_hand : game.player2_hand %>
      <% player_hand.each_with_index do |card, index| %>
        <% 
          # Get total number of cards in player's hand
          total_cards = player_hand.size

          # Calculate rotation angle between -25 and +25 degrees based on card position
          # When there's only 1 card, avoid division by zero by using max(1, total_cards-1)
          angle = -15 + (30.0 / [1, total_cards - 1].max) * index

          # Normalize angle to value between -1 and 1 for offset calculations
          normalized_angle = angle / 25.0

          # Calculate vertical offset using quadratic function
          # Cards rise more in the middle of the hand (-20px max)
          y_offset = -30 * (1 - normalized_angle * normalized_angle)

          # Calculate slight horizontal offset to bring cards closer together
          # Negative angle multiplier keeps cards from spreading too far
          x_offset = -angle * 0.15
        %>
        <div class="" style="transform-origin: bottom center; transform: rotate(<%= angle %>deg) translate(<%= x_offset %>px, <%= y_offset %>px)">
          <%= render partial: "games/card", locals: { 
            card: card, 
            current_user: current_user, 
            playable: ((game.current_turn == current_user.id && game.turn_phase == "play_card") || game.winner_id.present?),
            game: game, 
            last: index == player_hand.size - 1
          } %>
        </div>
      <% end %>
    </div>
    <!-- discard -->
    <div class="discard-area w-full px-5 <%= can_discard ? '' : 'hidden' %>" data-can-discard="<%= can_discard %>">
      <div class="flex flex-row items-center justify-center gap-2">
        <div class="block text-xs font-normal text-slate-400">You can opt to</div>
        <button data-controller="card" 
                data-action="click->card#discardCard" 
                class="w-28 px-2 py-2 mb-0.5 text-xs font-medium border border-slate-600 text-slate-400 rounded-lg transition-colors">
          Discard & Draw
        </button>
        <div class="block text-xs font-normal text-slate-400 mr-[0.3rem]">but only once</div>
      </div>
    </div>
  </div>
  <!-- winner declaration -->
  <% if game.winner_id %>
    <div class="mt-2 w-full flex flex-col animate-enter-scale">
      <div class="my-3 mx-7 px-3 pt-2 pb-3 bg-white rounded-lg relative z-40">
        <!-- heading -->
        <h1 class="mt-1 mb-4 text-xl font-bold text-slate-900 text-center">
          <%= game.winner_id == game.player1_id ? "You Won!" : "You Lost" %>
        </h1>
        <!-- scores -->
        <div class="flex items-center justify-center gap-4 mb-3">
          <div class="relative flex flex-1 flex-col items-center justify-center border border-slate-500/50 rounded-lg py-3 px-6 h-24">
            <% if game.player1_total_score >= game.player2_total_score %>
              <div class="absolute -top-4 bg-white z-1 p-1 px-2"><i class="fa fa-trophy text-amber-500 text-xl animate-bounce relative top-1"></i></div>
            <% end %>
            <div class="text-2xl font-bold <%= game.player1_total_score >= game.player2_total_score ? 'text-slate-900' : 'text-slate-400' %>"><%= number_with_delimiter(game.player1_total_score) %></div>
            <div class="text-sm font-medium <%= game.player1_total_score >= game.player2_total_score ? 'text-slate-900' : 'text-slate-400' %>"><%= game.player1.email.titleize %></div>
          </div>
          <div class="relative flex flex-1 flex-col items-center justify-center border border-slate-500/50 rounded-lg py-3 px-6 h-24">
            <% if game.player2_total_score > game.player1_total_score %>
              <div class="absolute -top-4 bg-white z-1 p-1 px-2"><i class="fa fa-trophy text-amber-500 text-xl"></i></div>
            <% end %>
            <div class="text-2xl font-bold <%= game.player2_total_score > game.player1_total_score ? 'text-slate-900' : 'text-slate-400' %>"><%= number_with_delimiter(game.player2_total_score) %></div>
            <div class="text-sm font-medium <%= game.player2_total_score > game.player1_total_score ? 'text-slate-900' : 'text-slate-400' %>"><%= game.player2.email.titleize %></div>
          </div>
        </div>
        <!-- back to lobby -->
        <div class="mt-4 flex flex-col items-center justify-center">
          <%= link_to "Back to Lobby", games_path, class: "py-2 w-full block text-center bg-slate-500 text-white rounded-lg text-sm" %>
        </div>
      </div>
    </div>
  <% end %>
  <!-- middle row (board, scoreboard) -->
  <div class="board w-full flex flex-col">
    <div>
      <!-- Player's board area -->
      <div class="<%= game.winner_id.present? ? 'mb-4' : '' %> px-7 player-board grid grid-cols-4 gap-2">
        <% player_data = current_user.id == game.player1_id ? board_state[:player_1] : board_state[:player_2] %>
        <% player_data[:columns].each_with_index do |column, index| %>
          <!-- Column -->
          <div class="<%= column_strength_classes(column[:score]) %>"
               data-controller="card"
               data-action="click->card#playColumn"
               data-column-index="<%= index %>">
            <!-- Hand name and score -->
            <% if column[:hand_name].present? %>
              <div class="text-xs text-center text-white relative top-[-0.1rem]">
                <div class="line-clamp-1"><%= column[:hand_name] %></div>
                <% if column[:score] && column[:score] > 0 %>
                  <div class="<%= score_color_class(column[:score]) %>">+<%= column[:score] %></div>
                <% end %>
              </div>
            <% end %>
            <!-- Cards vertically stacked -->
            <div class="flex flex-col -space-y-[2.3rem] md:-space-y-16 items-center">
              <% column[:cards].each do |card_code| %>
                <%= render partial: "games/card", locals: { 
                  card: game.find_card(card_code), 
                  current_user: current_user, 
                  playable: false, 
                  game: game 
                } %>
              <% end %>
            </div>
          </div>
        <% end %>
      </div>
    </div>
    <!-- scoreboard -->
    <% if game.winner_id.nil? %>
      <div class="my-3 mx-7 px-7 pt-2 pb-3 bg-white rounded-lg relative z-40">
        <% player1_score = (game.column_scores || {}).select { |col, _| col.to_i < 4 }.values.sum %>
        <% player2_score = (game.column_scores || {}).select { |col, _| col.to_i >= 4 }.values.sum %>
        <div class="flex items-center justify-center gap-4 rounded-lg">
          <div class="relative flex flex-1 flex-col items-center justify-center">
            <div class="text-xl font-bold text-slate-900 animate-enter-scale">
              <%= number_with_delimiter(player1_score) %>
            </div>
            <div class="text-xs font-medium text-slate-900">My Score</div>
          </div>
          <div class="w-px h-10 bg-slate-300"></div>
          <div class="relative flex flex-1 flex-col items-center justify-center">
            <div class="text-xl font-bold text-slate-500"><%= number_with_delimiter(player2_score) %></div>
            <div class="text-xs font-medium text-slate-500"><%= game.player2.email.titleize %></div>
          </div>
        </div>
      </div>
    <% end %>
    <!-- Opponent's board area -->
    <div class="mb-1">
      <div class="px-7 opponent-board grid grid-cols-4 gap-2">
        <% opponent_data = current_user.id == game.player1_id ? board_state[:player_2] : board_state[:player_1] %>
        <% opponent_data[:columns].each do |column| %>
          <!-- Column -->
          <div class="<%= column_strength_classes(column[:score]) %>">
            <!-- Hand name -->
            <% if column[:hand_name].present? %>
              <div class="text-xs text-center text-white relative top-[-0.1rem]">
                <div class="line-clamp-1"><%= column[:hand_name] %></div>
                <% if column[:score] && column[:score] > 0 %>
                  <div class="<%= score_color_class(column[:score]) %>">+<%= column[:score] %></div>
                <% end %>
              </div>
            <% end %>
            <!-- Cards vertically stacked -->
            <div class="flex flex-col -space-y-[2.3rem] md:-space-y-16 items-center">
              <% column[:cards].each do |card_code| %>
                <%= render partial: "games/card", locals: { 
                  card: game.find_card(card_code), 
                  current_user: current_user, 
                  playable: false, 
                  game: game 
                } %>
              <% end %>
            </div>
          </div>
        <% end %>
      </div>
    </div>
  </div>
  <!-- bottom row (opponent hand) -->
  <div class="px-2 w-full flex flex-row justify-center gap-2">
    <!-- opponent hand -->
    <div class="opponent-hand flex flex-row -space-x-[.3rem]">
      <% opponent_hand = current_user.id == game.player1_id ? game.player2_hand : game.player1_hand %>
      <% opponent_hand.each_with_index do |card, index| %>
        <%= render partial: "games/card", locals: { 
          card: game.winner_id.present? ? card : nil,
          current_user: current_user, 
          playable: false,
          game: game,
          last: index == opponent_hand.size - 1,
          facedown: !game.winner_id.present?
        } %>
      <% end %>
    </div>
  </div>
</div> 